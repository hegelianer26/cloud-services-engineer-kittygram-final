name: Terraform Trigger Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy 

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_service_account_key_file: ../key.json
      TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
      TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
      TF_VAR_deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
      TF_VAR_admin_ssh_key: ${{ secrets.ADMIN_SSH_KEY }}


    steps:
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: '1.7.5'
        
        - name: Check out infra directory only
          uses: actions/checkout@v3
          with:
            sparse-checkout: |
                infra
            sparse-checkout-cone-mode: false

            
        - name: Set up Service Account Key
          run: |
                cat <<EOF > key.json
                ${{ secrets.YC_SERVICE_ACCOUNT_KEY }}
                EOF

        - name: Terraform Init
          working-directory: ./infra
          run: terraform init
            
        - name: Terraform Plan
          working-directory: ./infra
          if: ${{ github.event.inputs.action == 'plan' }}
          run: terraform plan

        - name: Terraform Apply
          working-directory: ./infra
          if: ${{ github.event.inputs.action == 'apply' }}
          run: terraform apply -auto-approve
            
        - name: Terraform Destroy
          working-directory: ./infra
          if: ${{ github.event.inputs.action == 'destroy' }}
          run: terraform destroy -auto-approve

        - name: Get Terraform Outputs
          working-directory: ./infra
          if: ${{ github.event.inputs.action == 'apply' }}
          run: |
            VM_IP=$(terraform output -raw public-ip-address-for-vm-1)
            echo "VM_IP=$VM_IP" >> $GITHUB_ENV
        
        - name: Send message in tg
          uses: appleboy/telegram-action@master
          if: ${{ github.event.inputs.action == 'apply' }}
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: >-
              VM создана с IP: $VM_IP!
              Автор: ${{ github.actor }}
              Комментарий: ${{ github.event.commits[0].message }}
              Ссылка на коммит: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
        